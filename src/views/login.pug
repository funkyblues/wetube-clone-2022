//- login은 join과 매우 비슷할 것이다.
extends base 

block content 
  if errorMessage 
    span=errorMessage
  form(method="POST")
    input(placeholder="Username", name="username", type="text", required)
    input(placeholder="Password", name="password", type="password", required)
    input(type="submit", value="Login")
    br
    //- 1. user를 GitHub으로 보낸다.

    //- (참조) https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps
    //- parameter들을 전달해 줘야 함
    //- 그 중 하나는 client_id. GitHub이 준 client_id를 보내줘보자
    //- ㅎㅎ 잘 가네!
    //- only public data만 볼 수 있다는데, 우린 이것만 원하지는 않음.
    //- parameter들을 더 보내보자

    //- scope: 내가 사용자에 대해 어디까지 알 수 있는지를 적으면 된다. 그러니까 사용자가 정보를 어디까지 공유해야하는지
    //- 유저에게서 얼마나 많이 정보를 읽어내고 어떤 정보를 가져올 것인가에 대한 것
    //- scope 들어가보면 여러 정보들이 많이 있다. user항복을 사용!
    //- 결국 이 scope parameter에 따라 얻을 수 있는 정보가 달라진다는 것. URL에 계속 담아주면 되는데,
    //- 문제점은 이 긴 URL을 계속 변경해줘야 한다는 것.
    //- 그리고 오타가 발생한다면... 끔찍하지.
    //- 그러니 바꿔봅시다.

    //- allow_signup: GitHub 사용자가 아니면 회원가입(계정생성)을 시킬지 아닐지의 여부!
    a(href="/users/github/start") Continue with GitHub &rarr;

    //- 2. user는 GitHub에 의해 내 사이트로 redirect 된다.
  hr
  div 
    span Don't have an account? 
    a(href="/join") Create one now &rarr;